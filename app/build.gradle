
project.ext {
    daggerVersion = "2.0.2"
    butterknifeVersion = "7.0.1"
    okHttpLoggingInterceptorVersion = "2.6.0"
    retrofitVersion = "2.0.0-beta2"
    picassoVersion = "2.5.2"
    appcompatV7Version = "23.1.1"
    javaxAnnotationVersion = "10.0-b28"
    guavaVersion = "18.0"
    eventbusVersion = "2.4.1"
    leakCanaryVersion = "1.3.1"
    junitVersion = "4.12"
    junitRunnerVersion = "0.4.1"
    robolectricVersion = "3.0"
    espressoVersion = "2.2.1"
    supportAnnotationsVersion = "23.1.1"
    mockitoVersion = "1.10.19"
    dexmakerMockitoVersion = "1.2"
    stethoVersion = "1.2.0"
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    // https://github.com/robolectric/robolectric/issues/1862
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.jshvarts.popularmovies"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'THE_MOVIE_DB_API_KEY', MyTheMovieDbApiKey
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    debugCompile "com.squareup.leakcanary:leakcanary-android:$project.leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$project.leakCanaryVersion"

    compile "com.android.support:appcompat-v7:$project.appcompatV7Version"
    compile "com.jakewharton:butterknife:$project.butterknifeVersion"
    compile "com.squareup.picasso:picasso:$project.picassoVersion"
    compile "com.squareup.retrofit:retrofit:$project.retrofitVersion"
    compile "com.squareup.retrofit:converter-gson:$project.retrofitVersion"
    compile "com.squareup.okhttp:logging-interceptor:$project.okHttpLoggingInterceptorVersion"
    compile "com.google.dagger:dagger:$project.daggerVersion"
    compile "com.google.guava:guava:$project.guavaVersion"
    compile "de.greenrobot:eventbus:$project.eventbusVersion"
    compile "com.android.support:support-annotations:$project.supportAnnotationsVersion"
    compile "com.android.support:recyclerview-v7:$project.supportAnnotationsVersion"
    compile "com.android.support:cardview-v7:$project.supportAnnotationsVersion"

    // stetho for debugging
    compile "com.facebook.stetho:stetho:$project.stethoVersion"
    compile "com.facebook.stetho:stetho-okhttp:$project.stethoVersion"
    compile "com.facebook.stetho:stetho-urlconnection:$project.stethoVersion"

    testCompile "junit:junit:$project.junitVersion"
    testCompile("org.robolectric:robolectric:$project.robolectricVersion") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    // Force usage of support annotations in the test app, since it is internally used by the runner module.
    androidTestCompile "com.android.support:support-annotations:$project.supportAnnotationsVersion"
    androidTestCompile "com.android.support.test:runner:$project.junitRunnerVersion"
    androidTestCompile "com.android.support.test:rules:$project.junitRunnerVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$project.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-web:$project.espressoVersion"
    androidTestCompile "org.mockito:mockito-core:$project.mockitoVersion"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$project.dexmakerMockitoVersion"

    provided "com.google.dagger:dagger-compiler:$project.daggerVersion"
    provided "org.glassfish:javax.annotation:$project.javaxAnnotationVersion"
}
